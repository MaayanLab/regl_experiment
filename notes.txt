Working through examples from

https://regl.neocities.org/01-hello.html

regl
====

Install regl using npm

  npm install regl

browserify
==========

Use browersify to compile all of your dependencies into a payload of JS that you can deliver in a single script tag

  sudo npm install -g browersify

This will give you a browserify command you can invoke starting from a file, such as main.js and will create a bundle of all the files necessary to run your project =

Start by writing code that requires regl and other libs in main.jg and then you can run browserify to produce bundle.js

  browersify main.js > bundle.js

budo
====
  npm install -g budo
In development, it's nice to have a tool that will recompile your code every time you make a change to a file. You can use budo to incrementally recompile your code like so:

  budo main.js -- open

This command will compile your code using browserify, set up a local http server with your code in a basic html scaffold and open a web browser.

Every time you change your code, you can reload the page. If you prefer budo to handle that for you, you can pass in --live:

  budo main.js --open --live

and budo will reload the page whenever a file changes.

aside: ES6
==========
ECMAScript version 6 (ES6) is a new version of JS, which is currently being rolled out. It adds many nice features like template strings which make writing shader code much easier.

...

  npm install es2020

  browserify -r es2020 main.js > bundle.js

Or in budo

  budo main.js --open --live -- -t es2020


Using smoothly animate example

  browserify -t glslify -r es2020 main.js > bundle.js

  or

  budo main.js --open --live -- -t es2020 -t glslify